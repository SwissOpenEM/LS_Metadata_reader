name: Build & run tests
env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  INGESTOR_IMAGE_NAME: ${{ github.repository }}
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ${{matrix.build.os}}
    strategy:
      fail-fast: false
      matrix:
        build:
        - goos: linux
          goarch: amd64
          os: ubuntu-22.04
        - goos: windows
          goarch: amd64
          os: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.25'

    - name: Set up gotestfmt
      uses: gotesttools/gotestfmt-action@v2
      with:
        # Optional: pass GITHUB_TOKEN to avoid rate limiting.
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies
      run: go mod tidy

    - name: Run tests
      run: |
        go test -json -v ./... | tee gotestservice-${{ matrix.build.goos }}-${{ matrix.build.goarch }}.log | gotestfmt

    - name: Upload Test Log
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: service-test-log-${{ matrix.build.goos }}-${{ matrix.build.goarch }}
        path: gotestservice-${{ matrix.build.goos }}-${{ matrix.build.goarch }}.log
        if-no-files-found: error

  build_docker_image:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v5

      - name: Log into registry ${{ env.REGISTRY }}
        # if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.INGESTOR_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: ./
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          build-args: |
            VERSION=${{ steps.meta.outputs.tags }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
